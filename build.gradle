buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        gradlePluginPortal()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.7.0'
        classpath 'com.github.node-gradle:gradle-node-plugin:5.0.0'
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'com.github.node-gradle.node'
apply plugin: 'com.bmuschko.tomcat'

group = 'edu.mssm.pharm.maayanlab.x2k'
description = 'X2K'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    def tomcatVersion = '8.5.16'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
        // "org.apache.tomcat.embed:tomcat-embed-logging-juli:8.5.2",
        "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"

    implementation 'com.github.MaayanLab:ChEA:master-SNAPSHOT'
    implementation 'com.github.MaayanLab:Genes2Networks:master-SNAPSHOT'
    implementation 'com.github.MaayanLab.common:common-swing:master-SNAPSHOT'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.2.1'
    implementation 'com.github.MaayanLab.common:common-graph:master-SNAPSHOT'
    implementation 'com.github.MaayanLab:KEA:master-SNAPSHOT'
    implementation 'com.github.MaayanLab.common:common-core:master-SNAPSHOT'
    implementation 'com.github.MaayanLab.common:common-web:master-SNAPSHOT'
    implementation 'com.github.MaayanLab.common:common-geneticalgorithm:master-SNAPSHOT'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.8'
    providedCompile group: 'org.apache.tomcat', name: 'tomcat-jdbc', version: "${tomcatVersion}"
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
}

def webappDir = "${project.projectDir}/src/main/webapp/"

node {
    download = false
    nodeModulesDir = file(webappDir)
}

task prepareNpm(type: NpmTask) {
    inputs.file("${webappDir}/package.json")
    outputs.dir("${webappDir}/node_modules")
    args = ["install"]
}

task buildProject(type: NpmTask) {
    inputs.file("${webappDir}/.babelrc")
    inputs.file("${webappDir}/gruntfile.js")
    inputs.files fileTree(webappDir).include('**/*.js').include('**/*.css').exclude('dist/**').exclude('node_modules/**')
    outputs.dir("${webappDir}/dist")
    dependsOn prepareNpm
    args = ["run", "build"]
}

war.dependsOn buildProject

tomcat {
    httpPort = 8080
    contextPath = "X2K"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}
