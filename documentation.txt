################################################################################
##	important files
################################################################################

-deploy.sh
-Dockerfile
-pom.xml
-resources
	-ChEA.jar
	-G2N.jar
-src/main/webapp/
	-ChEA_and_KEA.jsp
	-network.jsp
	-input.jsp
	-G2N.jsp
	-css
		-main.css
	-ctyoscape
	-datasets
	-default.svg
	-favicon.ico
	-x2k_logo_v4.png
	-js
		-Chart.min.js
		-chea_and_kea.js
		-exportJson.js
		-index.js
		-jquerry-3.0.0.min.js
		-network.js
-src/main/java/edu/mssm/pharm/maayanlab/X2K/
	-web
		-ChEAServlet.java
		-Context.java
		-G2NServlet.java
		-KEAServlet.java
		-X2KServlet.java
	-enrichment
		-X2K.java

################################################################################
##	descriptions
################################################################################

-deploy.sh - needed to make docker and then deploy. usage: bash deploy.sh

-Dockerfile - configures docker container, pretty standard for java/maven stuff

-pom.xml - configures maven dependencies. the key point here is that it includes
the updated ChEA and G2N jars whcih aren't pulled from the artifactory, but
instead are local. to set this up, it was a real problem. i figured it out 
by running the following commands to somehow put it into the maven path, that
being said, i'm not completely sure how it all works and if anything causes
problems, it will be this.  

mvn install:install-file -Dfile=resources/G2N.jar -DgroupId=edu.mssm.pharm.maayanlab.Genes2Networks -DartifactId=G2N -Dversion=1.0 -Dpackaging=jar
mvn install:install-file -Dfile=resources/ChEA.jar -DgroupId=edu.mssm.pharm.maayanlab -DartifactId=ChEA -Dversion=1.0 -Dpackaging=jar

-resources - updated ChEA and G2N jar files. the only changes are that they have
new datasets and the java is configured to work with them

-src/main/webapp/ - the deployed web folder, contains the front end files

-ChEA_and_KEA.jsp - the displayed web page for both the ChEA and KEA results.
nothing really fancy going on here, just setting up a div which the javascript
will draw stuff in (specifically the graphs)

-network.jsp - the displayed web page for the X2K results. nothing particularly
fancy going on here either. just sets up a div for the graphs to go in and
provides some download buttons

-input.jsp - the main place where some jsp witchcraft goes on - in this file
you'll see the form for submissions which uses jsp to take in a lot of the
variable names for settings found in X2K, ChEA, G2N, and KEA. there is something
kind of hacky going on here which is the checkboxes for the G2N datasets; 
for every checkbox, there is a hidden one that sends a false signal, so if the
checkbox isn't checked, a false signal will go through to be parsed by the
X2K/G2N servlet. this should possibly be replaced by a javascript solution

-G2N.jsp - the G2N results, same deal as the other jsp files really

-main.css - the css for everything, nothing very fancy going on here, but it's 
not super well organized. that being said, it's all here

-ctyoscape - cytoscape is what's used to display the graphs for G2N and X2K
results, and that lives in this folder. include as you will

-datasets - the actual dataset files that can be downloaded by the user on the
downloads tab of the main page

-default.svg - the loading spinning thing symbol. apparently .svg is a
deprecated method, but i found this one works and looks best. from loading.io

-favicon.ico - the favicon

-x2k_logo_v4.png - the logo, it's not very good, but it'll do. logo_v3 has the 
colors switched in case you prefer that. most people don't from what i've seen

-js - the javascript folder

-Chart.min.js - chart.js file, nothing to be done here

-chea_and_kea.js - the javascript used to make charts and tables for both the
KEA and ChEA results pages. the same js works for both of them as it will case
on the json_file.type which can either be "ChEA" or "KEA"

-exportJson.js - the single function that is used to download the various JSONs
from the results pages

-index.ks - the javascript for the input page. most of what it does is set up 
the stats histograms for the stats page. this is one of the places where
jquerry is used

-jquerry-3.0.0.min.js - just the file used to import jquerry, nothing to see
here

-network.js - the javascript used to set up both the G2N as well as X2K results
graphs. it uses cytoscape which is found in the cytoscape folder. the main set
of functions filter and reconfigure the json entries so they can be properly
displayed with cytoscape

-src/main/java/edu/mssm/pharm/maayanlab/X2K/ - main folder for the java stuff

-web - the folder containing all of the servlets

-ChEAServlet.java - ChEA servlet. the main thing it does is override the doPost
function (that picks up post requests) and then runs ChEA

-Context.java - no idea what this does, but it seems very important

-G2NServlet.java - same as ChEA servlet but with G2N

-KEAServlet.java - same with ChEA servlet but with KEA

-X2KServlet.java - same with the other servlets, but actually runs from X2K.java

-enrichment - the folder where all of the X2K analysis takes place

-X2K.java - the meat of the enrichment. defines an x2k object with a run 
function which is really what the X2K servlet runs